<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

		
	<!-- 
		Teniendo en cuenta que el bean para la clase pizza no puede ser un Singleton, ya que 
		lógicamente queremos servir una pizza distinta a cada cliente, y no la misma para todo ellos. 
	-->	
	<bean id="pizza" class="spring.ejemplos.dos.ioc.xml.ejemplocompleto.PizzaBean" scope="prototype"/>
	
	<bean id="pizzeria1" class="spring.ejemplos.dos.ioc.xml.ejemplocompleto.PizzeriaServiceImpl" lazy-init="true" >
		<property name="pizza" ref="pizza"></property>
	</bean>
	
	<!-- 
		Usando la etiqueta lookup-method podemos indicar a Spring en el applicationContext.xml 
		que implementar el método createPizza es asunto suyo, y que lo queremos que haga es retornar un bean pizza
		El atributo name contiene el nombre del método a inyectar, y el atributo bean la referencia al 
		bean a instanciar. => Esta va en conjunto con el scope protoype de la clase PizzaBean
		El atributo init-method => Se ejecutara cuando se inicialice el objeto solo una vez.
	 -->
	<bean id="pizzeria2" class="spring.ejemplos.dos.ioc.xml.ejemplocompleto.PizzeriaServiceImpl2" init-method="init" lazy-init="true">
		<lookup-method name="createPizza" bean="pizza"/>
	</bean>				
	
</beans>